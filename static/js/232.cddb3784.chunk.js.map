{"version":3,"file":"static/js/232.cddb3784.chunk.js","mappings":"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","sources":["redux/contacts/contactsOperations.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/pages.module.css?46e1"],"sourcesContent":["import axios from 'axios';\r\nimport {\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    fetchContactsError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactsRequest,\r\n    deleteContactsSuccess,\r\n    deleteContactsError,\r\n} from './contactsAction';\r\n\r\naxios.defaults.baseURL = 'https://61c7adbb9031850017547497.mockapi.io';\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n    dispatch(fetchContactsRequest());\r\n\r\n    axios\r\n        .get('/contacts')\r\n        .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n        .catch(error => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nexport const addContact =\r\n    ({ name, number }) =>\r\n        dispatch => {\r\n            dispatch(addContactRequest());\r\n\r\n            axios\r\n                .post('/contacts', {name, number})\r\n                .then(({ data }) => dispatch(addContactSuccess(data)))\r\n                .catch(error => dispatch(addContactError(error)));\r\n        };\r\n\r\nexport const deleteContacts = id => dispatch => {\r\n    dispatch(deleteContactsRequest());\r\n\r\n    axios\r\n        .delete(`/contacts/${id}`)\r\n        .then(() => dispatch(deleteContactsSuccess(id)))\r\n        .catch(error => dispatch(deleteContactsError(error)));\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__ofD6A\"};","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function () {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};"," import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n    [getContacts, getFilter],\r\n    (contacts, filter) => {\r\n        const normalizedFilter = filter.toLowerCase();\r\n        return contacts.filter(contact =>\r\n            contact.name.toLowerCase().includes(normalizedFilter),\r\n        );\r\n    },\r\n);\r\n\r\n\r\n\r\n","import { useState } from 'react';\nimport { addContact } from '../../redux/contacts/contactsOperations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport s from './ContactForm.module.css';\nimport { getContacts } from '../../redux/contacts/contactsSelectors';\nimport { Button, Form } from 'react-bootstrap';\n\nconst ContactForm = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(getContacts);\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    // const handleChange = e => {\n    //     const { name, value } = e.target;\n    //     switch (name) {\n    //         case 'name':\n    //             setName(value);\n    //             return;\n    //\n    //         case 'number':\n    //             setNumber(value);\n    //             return;\n    //\n    //         default:\n    //             return;\n    //     }\n    // };\n\n    // const findByName = contactName => {\n    //     return contacts.some(({ name }) => name === contactName);\n    // };\n    //\n    // const findByNumber = contactNumber => {\n    //     return contacts.some(({ number }) => number === contactNumber);\n    // };\n\n    const reset = () => {\n        setName('');\n        setNumber('');\n    };\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        if (\n            contacts.some((item) => {\n                return item.name.toLowerCase() === name.toLowerCase();\n            })\n        ) {\n            alert(`${name} is already in contacts`);\n\n        }\n        else {\n            dispatch(addContact({ name, number }));\n            reset();\n        }\n    };\n\n    return (\n        <Form onSubmit={handleSubmit} className={s.form}>\n            <Form.Group className=\"mb-3\">\n                <Form.Label>\n                    Name\n                    <Form.Control\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов.\"\n                        required\n                        value={name}\n                        className={s.own}\n                        onChange={e => {\n                        setName(e.currentTarget.value);\n                    }}\n                    />\n                </Form.Label>\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n                <Form.Label>\n                    Number\n                    <Form.Control\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Номер телефона состоит из цифр пробелов, тире, круглые скобки и может начинаться с +\"\n                        required\n                        value={number}\n                        className={s.own}\n                        onChange={e => {\n                            setNumber(e.currentTarget.value);\n                        }}\n                    />\n                </Form.Label>\n            </Form.Group>\n            <Button variant=\"warning\" type=\"submit\">\n                Add contact\n            </Button>\n        </Form>\n    );\n};\n\nexport default ContactForm;","// extracted by mini-css-extract-plugin\nexport default {\"contactListItem\":\"ContactListItem_contactListItem__tHIl4\",\"contact\":\"ContactListItem_contact__hH78z\",\"buttonDelete\":\"ContactListItem_buttonDelete__0mpjM\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { deleteContacts } from '../../redux/contacts/contactsOperations';\nimport { useDispatch } from 'react-redux';\nimport s from './ContactListItem.module.css';\nimport { Button } from 'react-bootstrap';\n\nconst ContactListItem = ({ name, number, id }) => {\n    const dispatch = useDispatch();\n    const onDeletContact = id => dispatch(deleteContacts(id));\n    return (\n        <li className={s.contactListItem}>\n            <p className={s.contact}>\n                {' '}\n                {name}: {number}\n            </p>\n            <Button\n                variant=\"danger\"\n                className={s.buttonDelete}\n                type=\"button\"\n                onClick={() => onDeletContact(id)}\n            >\n                Delete\n            </Button>\n        </li>\n    );\n\n}\nContactListItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n};\n\nexport default ContactListItem;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__j-BxW\"};","import React from 'react';\nimport ContactListItem from '../ContactListItem/ContactListItem';\n\nimport s from './ContactList.module.css';\nimport { useSelector } from 'react-redux';\nimport { getVisibleContacts } from '../../redux/contacts/contactsSelectors';\n\nconst ContactList = () => {\n    const contacts = useSelector(getVisibleContacts);\n    return (\n        <div className={s.contacts}>\n            <ul className={s.list}>\n                {contacts.map(({ id, name, number }) => (\n                    <ContactListItem key={id} id={id} name={name} number={number} />\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default ContactList;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__jsq5P\"};","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from '../../redux/contacts/contactsAction';\nimport { getFilter } from '../../redux/contacts/contactsSelectors';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n    const filter = useSelector(getFilter);\n    const dispatch = useDispatch();\n    const changeFilter = e => {\n        return dispatch(filterContact(e.target.value));\n    };\n\n    return (\n        <Form autoComplete=\"off\" className={s.form}>\n            <Form.Group className=\"mb-3\">\n                <Form.Label className={s.label}>\n                    Find contacts by name\n                    <Form.Control\n                        placeholder=\"Enter the name you want to find\"\n                        type=\"text\"\n                        name=\"filter\"\n                        className={s.filter}\n                        value={filter}\n                        onChange={changeFilter}\n                    />\n                </Form.Label>\n            </Form.Group>\n        </Form>\n    );\n};\n\nexport default Filter;","import { useEffect } from 'react';\r\nimport ContactForm from '../components/ContactForm';\r\nimport ContactList from '../components/ContactList';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Filter from '../components/Filter';\r\nimport '../App.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchContacts } from '../redux/contacts/contactsOperations';\r\nimport s from './pages.module.css';\r\nimport Container from '../components/Container/Container';\r\n\r\n\r\nconst App = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(fetchContacts());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <Container>\r\n            <h1 className={s.title}>Phonebook</h1>\r\n            <ContactForm />\r\n            <h2 className={s.title}>Contacts</h2>\r\n            <Filter />\r\n            <ContactList />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default App;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"pages_form__yq2EY\",\"label\":\"pages_label__e0w1P\",\"title\":\"pages_title__RY1GY\"};"],"names":["axios","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","contact","includes","dispatch","useDispatch","useSelector","useState","setName","number","setNumber","Form","onSubmit","e","preventDefault","some","item","alert","addContactRequest","then","data","addContactSuccess","catch","error","addContactError","addContact","className","s","type","pattern","title","required","onChange","currentTarget","Button","variant","id","onDeletContact","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","deleteContacts","onClick","autoComplete","placeholder","filterContact","target","useEffect","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","Container"],"sourceRoot":""}